#include "matchers.hpp"
#include "matcher_t.hpp"
#include "instructions.hpp"

template <typename instruction_type_t>
inline sp_t<instruction_t> generate(u32_t word)
{
   return sp_t<instruction_t>(new instruction_type_t(word));
}

#define matcher(a, b, c) sp_t<matcher_t>(new matcher_t((a), (b), generate<c>))

// ARM A7.7.x
vec_t<sp_t<matcher_t>> matchers {
   matcher(0xfbe08000, 0xf1400000, adc_immediate_t1_t),
   matcher(0x0000ffc0, 0x00004140, adc_register_t1_t),
   matcher(0xffe00000, 0xeb400000, adc_register_t2_t),
   matcher(0x0000fe00, 0x00001c00, add_immediate_t1_t),
   matcher(0x0000f800, 0x00003000, add_immediate_t2_t),
   matcher(0xfbe08000, 0xf1000000, add_immediate_t3_t),
   matcher(0xfbf08000, 0xf2000000, add_immediate_t4_t),
   matcher(0x0000fe00, 0x00001800, add_register_t1_t),
   matcher(0x0000ff00, 0x00004400, add_register_t2_t),
   matcher(0xffe00000, 0xeb000000, add_register_t3_t),
   matcher(0x0000f800, 0x0000a800, add_sp_plus_immediate_t1_t),
   matcher(0x0000ff80, 0x0000b000, add_sp_plus_immediate_t2_t),
   matcher(0x0000f800, 0x0000a000, adr_t1_t),
   matcher(0xfbff8000, 0xf2af0000, adr_t2_t),
   matcher(0xfbff8000, 0xf20f0000, adr_t3_t),
   matcher(0xfbe08000, 0xf0000000, and_immediate_t1_t),
   matcher(0x0000ffc0, 0x00004000, and_register_t1_t),
   matcher(0xffe08000, 0xea000000, and_register_t2_t),
   matcher(0x0000f800, 0x00001000, asr_immediate_t1_t),
   matcher(0xffef0000, 0xea4f0000, asr_immediate_t2_t),
   matcher(0x0000ffc0, 0x00004100, asr_register_t1_t),
   matcher(0xffe0f0f0, 0xfa40f000, asr_register_t2_t),
   matcher(0x0000f000, 0x0000d000, b_t1_t),
   matcher(0x0000f800, 0x0000e000, b_t2_t),
   matcher(0xf800d000, 0xf0008000, b_t3_t),
   matcher(0xf800d000, 0xf0009000, b_t4_t),
   matcher(0xfbf08000, 0xf3600000, bfi_t1_t),
   matcher(0xfbe08000, 0xf0200000, bic_immediate_t1_t),
   matcher(0x0000ffc0, 0x00004380, bic_register_t1_t),
   matcher(0xffe08000, 0xea200000, bic_register_t2_t),
   matcher(0x0000ff00, 0x0000be00, bkpt_t1_t),
   matcher(0xf800d000, 0xf000d000, bl_t1_t),
   matcher(0x0000ff87, 0x00004780, blx_t1_t),
   matcher(0x0000ff87, 0x00004700, bx_t1_t),
   matcher(0x0000f500, 0x0000b100, cbz_t1_t),
   matcher(0xff000010, 0xee000000, cdp_t1_t),
   matcher(0xff000010, 0xfe000000, cdp_t2_t),
   matcher(0xffffffff, 0xf3bf8f2f, clrex_t1_t),
   matcher(0xfff0f0f0, 0xfab0f080, clz_t1_t),
   matcher(0x0000ffc0, 0x000042c0, cmn_register_t1_t),
   matcher(0x0000f800, 0x00002800, cmp_immediate_t1_t),
   matcher(0xfbf08f00, 0xf1b00f00, cmp_immediate_t2_t),
   matcher(0x0000ffc0, 0x00004280, cmp_register_t1_t),
   matcher(0x0000ff00, 0x00004500, cmp_register_t2_t),
   matcher(0xfff08f00, 0xebb00f00, cmp_register_t3_t),
   matcher(0x0000ffec, 0x0000b660, cps_t1_t),
   matcher(0xfffffff0, 0xf3af80f0, dbg_t1_t),
   matcher(0xfffffff0, 0xf3bf8f50, dmb_t1_t),
   matcher(0xfffffff0, 0xf3bf8f40, dsb_t1_t),
   matcher(0xfbe08000, 0xf0800000, eor_immediate_t1_t),
   matcher(0x0000ffc0, 0x00004040, eor_register_t1_t),
   matcher(0xffe08000, 0xea800000, eor_register_t2_t),
   matcher(0xfffffff0, 0xf3bf8f60, isb_t1_t),
   matcher(0x0000ff00, 0x0000bf00, it_t1_t),
   matcher(0xfe100000, 0xec100000, ldc_immediate_t1_t),
   matcher(0xfe100000, 0xfc100000, ldc_immediate_t2_t),
   matcher(0xfe1f0000, 0xec1f0000, ldc_literal_t1_t),
   matcher(0xfe1f0000, 0xfc1f0000, ldc_literal_t2_t),
   matcher(0x0000f800, 0x0000c800, ldm_t1_t),
   matcher(0xffd02000, 0xe8900000, ldm_t2_t),
   matcher(0xffd02000, 0xe9100000, ldmdb_t1_t),
   matcher(0x0000f800, 0x00006800, ldr_immediate_t1_t),
   matcher(0x0000f800, 0x00009800, ldr_immediate_t2_t),
   matcher(0xfff00000, 0xf8d00000, ldr_immediate_t3_t),
   matcher(0xfff00800, 0xf8500800, ldr_immediate_t4_t),
   matcher(0x0000f800, 0x00004800, ldr_literal_t1_t),
   matcher(0x0000fe00, 0x00005800, ldr_register_t1_t),
   matcher(0xfff00fc0, 0xf8500000, ldr_register_t2_t),
   matcher(0x0000f800, 0x00007800, ldrb_immediate_t1_t),
   matcher(0xfff00000, 0xf8900000, ldrb_immediate_t2_t),
   matcher(0xfff00800, 0xf8100800, ldrb_immediate_t3_t),
   matcher(0x0000fe00, 0x00005c00, ldrb_register_t1_t),
   matcher(0xfff00fc0, 0xf8100000, ldrb_register_t2_t),
   matcher(0xfff00f00, 0xf8100e00, ldrbt_t1_t),
   matcher(0xfe500000, 0xe8500000, ldrd_immediate_t1_t),
   matcher(0xfe5f0000, 0xe85f0000, ldrd_literal_t1_t),
   matcher(0xfff00f00, 0xe8500f00, ldrex_t1_t),
   matcher(0xfff00fff, 0xe8d00f4f, ldrexb_t1_t),
   matcher(0xfff00fff, 0xe8d00f5f, ldrexh_t1_t),
   matcher(0x0000f800, 0x00008800, ldrh_immediate_t1_t),
   matcher(0xfff00000, 0xf8b00000, ldrh_immediate_t2_t),
   matcher(0xfff00800, 0xf8300800, ldrh_immediate_t3_t),
   matcher(0xff7f0000, 0xf83f0000, ldrh_literal_t1_t),
   matcher(0x0000fe00, 0x00005a00, ldrh_register_t1_t),
   matcher(0xfff00000, 0xf8300000, ldrh_register_t2_t),
   matcher(0xfff00f00, 0xf8300e00, ldrht_t1_t),
   matcher(0xfff00000, 0xf9900000, ldrsb_immediate_t1_t),
   matcher(0xfff00800, 0xf9100800, ldrsb_immediate_t2_t),
   matcher(0xff7f0000, 0xf91f0000, ldrsb_literal_t1_t),  // 15:1111 1001 U001 1111 ?Rt? ???? imm1 2???
   matcher(0x0000fe00, 0x00005600, ldrsb_register_t1_t),
   matcher(0xfff00fc0, 0xf9100000, ldrsb_register_t2_t), // 18:1111 1001 0001 ?Rn? ?Rt? 0000 00i2 ?Rm?

#if 0
   matcher(0x0000f800, 0x00000000, lsl_immediate_t1_t),
   matcher(0x0000f800, 0x00000800, lsr_immediate_t1_t),
   matcher(0x0000fe00, 0x00001a00, sub_register_t1_t),
   matcher(0x0000fe00, 0x00001e00, sub_immediate_t1_t),
   matcher(0x0000f800, 0x00003800, sub_immediate_t2_t),
   matcher(0x0000f800, 0x00002000, mov_immediate_t1_t),
   matcher(0x0000ffc0, 0x00004080, lsl_register_t1_t),
   matcher(0x0000ffc0, 0x000040c0, lsr_register_t1_t),
   matcher(0x0000ffc0, 0x00004180, sbc_register_t1_t),
   matcher(0x0000ffc0, 0x000041c0, ror_register_t1_t),
   matcher(0x0000ffc0, 0x00004200, tst_register_t1_t),
   matcher(0x0000ffc0, 0x00004240, rsb_immediate_t1_t),
   matcher(0x0000ffc0, 0x00004300, orr_register_t1_t),
   matcher(0x0000ffc0, 0x00004340, mul_registers_t1_t),
   matcher(0x0000ffc0, 0x000043c0, mvn_register_t1_t),
#endif
};
